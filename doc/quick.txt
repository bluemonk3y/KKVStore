
$ java -jar ksql-cli-1.0-SNAPSHOT-standalone.jar local

#topic
ksql> CREATE TOPIC orders_topic WITH (format = 'json', kafka_topic='orders_topic_json');

#topic content - ie. stream
ksql> CREATE STREAM orders (ordertime bigint, orderid bigint, itemid varchar, orderunits double, arraycol array<double>, mapcol map<varchar, double>) WITH (topicname = 'orders_topic' , key='orderid');

ksql> SELECT * FROM ORDERS;

#perform an analytic
ksql> SELECT itemid, sum(orderunits) FROM orders WINDOW TUMBLING ( size 30 second) group by itemid;


## twitter
#topic
ksql> CREATE TOPIC tweets_topic WITH (format = 'json', kafka_topic='tweets_topic_json');

#topic content - ie. stream
ksql> CREATE STREAM tweets (timestamp bigint, userid varchar, message varchar, tags varchar) WITH (topicname = 'tweets_topic' , key='userid');

ksql> SELECT * FROM tweets;

#perform an analytic - count number of tweets
ksql> SELECT userid, count(message) FROM tweets WINDOW TUMBLING ( size 30 second) group by userid;

#perform an analytic - count number of tweets
ksql> SELECT userid, count(message) FROM tweets WINDOW TUMBLING ( size 30 second) group by userid;